Implement pow(x, n), which calculates x raised to the power n (i.e., xn).

Input: x = 2.10000, n = 3
Output: 9.26100

Input: x = 2.00000, n = -2
Output: 0.25000
Explanation: 2-2 = 1/22 = 1/4 = 0.25

Constraints:

-100.0 < x < 100.0
-2^31 <= n <= 2^31-1
-10^4 <= xn <= 10^4

Code : 


class Solution {
public:
    double myPow(double x, int n) {
        if (n == 0) return 1;
        long long int N = n; // for limits purpose
        if(N<0)
        {
           x = 1/x;
           N = -N;
        }
        double ans = 1;
        for (long long int i = N ; i ; i = i/2)
        {
            if((i%2) == 1)
            {
                ans =  ans*x;
            }
            x = x*x; //incrementing x twice so that we can reduce the value of i / 2.   
        }
        return ans;    
    }
};
